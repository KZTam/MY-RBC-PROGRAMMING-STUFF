

/* Includes ------------------------------------------------------------------*/
#include "main.h"

	uint8_t rxdata[15];
	uint8_t checksum;
	int i;
	char msg[100];
	int16_t initial;
	int angle = 0;
	int displayangle;
	int turns;
	int flag1, flag2, flag3, grandflag; //each change to 1 when data recieved is valid.

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
	set();
	HAL_UART_Receive_IT(&huart5, rxdata, 15);

	while(1){
	}
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	if(huart->Instance == huart5.Instance) //data from uart5 received, start running
	{
		for(i = 2; i < 14; i++) //checksum
		{
			checksum += rxdata[i];
		}

		if(rxdata[0] == 0xAA && rxdata[1] == 0x00 && rxdata[14] == checksum) //only run if header and checksum valid
		{
			angle = (int16_t)((rxdata[4] << 8) + rxdata[3]) / 100; //0 to 180, 0 to -180.

			if(angle - initial < -300) //turn configuration
			{
				turns++;
			}
			else if(angle - initial > 300)
			{
				turns--;
			}
			initial = angle; // store angle to compare with next angle later

			displayangle = angle + 360*turns; //angle equation

     		sprintf(msg,"angle = %d deg,cycle = %d\n",displayangle, (int8_t)rxdata[13]); //msg arrangement
			HAL_UART_Transmit(&huart2, msg, strlen(msg), 100); //msg send to phone via bluetooth

			checksum = 0; //refresh checksum
		}
	}
	HAL_UART_Receive_IT(&huart5, rxdata, 15);
}

void TIM6_DAC_IRQHandler(void)
{
	led1 = !led1;
	HAL_TIM_IRQHandler(&htim6);
}


/**
 * @brief  This function is executed in case of error occurrence.
 */
void Error_Handler(void)
{


}
#ifdef  USE_FULL_ASSERT
/**
 * @brief  Reports the name of the source file and the source line number
 *         where the assert_param error has occurred.
 * @param  file: pointer to the source file name
 * @param  line: assert_param error line source number
 * @retval None
 */
void assert_failed(uint8_t *file, uint32_t line)
{
	/* USER CODE BEGIN 6 */
	/* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
	/* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */


/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

