

/* Includes ------------------------------------------------------------------*/
#include "main.h"

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
	set();
	int flag = 0;
	while(1){
	
	//Note: Tim3 psc and period (for BDC1) must be initialise to get frequency to 50Hz or servo will not move
	
//		WriteBDC(&BDC1,2500); //270 degree
//		HAL_Delay(1000);
//		WriteBDC(&BDC1,500); //0 degree
//		HAL_Delay(1000);

		if(PB1 == 0 && flag == 0)
		{
			WriteBDC(&BDC1,500);
			flag = 1;
		}
		else if(PB1 == 1 && flag == 1)
		{
			flag = 2;
		}
		else if(PB1 == 0 && flag == 2)
		{
			WriteBDC(&BDC1,1167);
			flag = 3;
		}
		else if(PB1 == 1 && flag == 3)
		{
			flag = 4;
		}
		else if(PB1 == 0 && flag == 4)
		{
			WriteBDC(&BDC1,1833);
			flag = 5;
		}
		else if(PB1 == 1 && flag == 5)
		{
			flag = 6;
		}
		else if(PB1 == 0 && flag == 6)
		{
			WriteBDC(&BDC1,2500);
			flag = 7;
		}
		else if(PB1 == 0 && flag == 7)
		{
			flag = 0;
		}
	}
}

void TIM6_DAC_IRQHandler(void)
{
	led1 = !led1;
	HAL_TIM_IRQHandler(&htim6);
}


/**
 * @brief  This function is executed in case of error occurrence.
 */
void Error_Handler(void)
{


}
#ifdef  USE_FULL_ASSERT
/**
 * @brief  Reports the name of the source file and the source line number
 *         where the assert_param error has occurred.
 * @param  file: pointer to the source file name
 * @param  line: assert_param error line source number
 * @retval None
 */
void assert_failed(uint8_t *file, uint32_t line)
{
	/* USER CODE BEGIN 6 */
	/* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
	/* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */


/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

