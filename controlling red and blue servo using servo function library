

/* Includes ------------------------------------------------------------------*/
#include "main.h"

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
	SERVO_t SERVO1;
	set();
  
  //NOTE: using this function below no need to change the psc and period in set() function.
  
	ServoxInit(&SERVO1, &htim1, GPIOE,GPIO_PIN_13, TIM_CHANNEL_3); //IP2

	while(1){
		ServoSetPulse(&SERVO1, 1000);
		HAL_Delay(1000);
		ServoSetPulse(&SERVO1, 1500);
		HAL_Delay(1000);
		ServoSetPulse(&SERVO1, 2000);
		HAL_Delay(1000);
		ServoSetPulse(&SERVO1, 2500);
		HAL_Delay(1000);
		ServoSetPulse(&SERVO1, 500);
		HAL_Delay(1000);
	}
}

void TIM6_DAC_IRQHandler(void)
{
	led1 = !led1;
	HAL_TIM_IRQHandler(&htim6);
}


/**
 * @brief  This function is executed in case of error occurrence.
 */
void Error_Handler(void)
{


}
#ifdef  USE_FULL_ASSERT
/**
 * @brief  Reports the name of the source file and the source line number
 *         where the assert_param error has occurred.
 * @param  file: pointer to the source file name
 * @param  line: assert_param error line source number
 * @retval None
 */
void assert_failed(uint8_t *file, uint32_t line)
{
	/* USER CODE BEGIN 6 */
	/* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
	/* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */


/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

